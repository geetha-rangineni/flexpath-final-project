Sequence,Time,File,RangeOffset,RangeLength,Text,Language,Type
1,2,"src/pages/HomePage.jsx",0,0,"import React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\n\nexport default function HomePage() {\n  const [publicGroups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [editIndex, setEditIndex] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [visibility, setVisibility] = useState('PRIVATE');\n\n  const modalRef = useRef();\n\n  const fetchGroups = async (query = '') => {\n    try {\n      const token = localStorage.getItem('token');\n      const res = await axios.get(`/api/groups${query}`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      setGroups(res.data);\n    } catch (err) {\n      console.error('Error fetching public groups:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchGroups();\n  }, []);\n\n  const resetForm = () => {\n    setName('');\n    setDescription('');\n    setVisibility('PRIVATE');\n    setEditIndex(null);\n  };\n\n  const handleEditClick = (index) => {\n    const group = publicGroups[index];\n    setName(group.name);\n    setDescription(group.description);\n    setVisibility(group.visibility);\n    setEditIndex(index);\n    new bootstrap.Modal(modalRef.current).show();\n  };\n\n  const handleDeleteClick = async (index) => {\n    try {\n      const token = localStorage.getItem('token');\n      const groupId = publicGroups[index].id;\n      await axios.delete(`http://localhost:8080/api/groups/${groupId}`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      fetchGroups();\n    } catch (err) {\n      console.error('Error deleting group:', err);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    const group = { name, description, visibility };\n    try {\n      if (editIndex !== null) {\n        const groupId = publicGroups[editIndex].id;\n        await axios.put(`http://localhost:8080/api/groups/${groupId}`, group, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n      } else {\n        await axios.post(`http://localhost:8080/api/groups`, group, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n      }\n      bootstrap.Modal.getInstance(modalRef.current)?.hide();\n      resetForm();\n      fetchGroups();\n    } catch (err) {\n      console.error('Error saving group:', err);\n    }\n  };\n\n  const handleSearch = () => {\n    if (searchTerm.trim()) {\n      fetchGroups(`?search=${searchTerm}`);\n    }\n  };\n\n  const handleClearSearch = () => {\n    setSearchTerm('');\n    fetchGroups();\n  };\n\n  if (loading) {\n    return (\n      <div className=""d-flex justify-content-center align-items-center min-vh-100"">\n        <div className=""text-secondary fs-5"">Loading content...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=""container py-5"">\n      <h1 className=""text-center mb-4"">Explore Public Content</h1>\n\n      {/* Search Field */}\n      <div className=""d-flex justify-content-between align-items-center mb-4"">\n        <div className=""input-group w-50"">\n          <input\n            type=""text""\n            className=""form-control""\n            placeholder=""Search by name...""\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n          <button className=""btn btn-outline-primary"" onClick={handleSearch}>üîç</button>\n          <button className=""btn btn-outline-secondary"" onClick={handleClearSearch}>‚úñ</button>\n        </div>\n        <button\n          className=""btn btn-primary""\n          data-bs-toggle=""modal""\n          data-bs-target=""#editGroupModal""\n          onClick={resetForm}\n        >\n          ‚ûï Add Group\n        </button>\n      </div>\n\n      <div className=""table-responsive"">\n        <table className=""table table-bordered table-striped text-center"">\n          <thead className=""table-light"">\n            <tr>\n              <th>Name</th>\n              <th>Description</th>\n              <th>Visibility</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {publicGroups.length > 0 ? (\n              publicGroups.map((group, index) => (\n                <tr key={index}>\n                  <td>{group.name}</td>\n                  <td>{group.description}</td>\n                  <td>{group.visibility}</td>\n                  <td>\n                    <button className=""btn btn-sm btn-outline-primary me-2"" onClick={() => handleEditClick(index)}>Edit</button>\n                    <button className=""btn btn-sm btn-outline-danger"" onClick={() => handleDeleteClick(index)}>Delete</button>\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan=""4"" className=""text-muted"">No groups available.</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Edit/Add Group Modal */}\n      <div className=""modal fade"" id=""editGroupModal"" tabIndex=""-1"" ref={modalRef}>\n        <div className=""modal-dialog"">\n          <form className=""modal-content"" onSubmit={handleSubmit}>\n            <div className=""modal-header"">\n              <h5 className=""modal-title"">{editIndex !== null ? 'Edit Group' : 'Add Group'}</h5>\n              <button type=""button"" className=""btn-close"" data-bs-dismiss=""modal""></button>\n            </div>\n            <div className=""modal-body"">\n              <div className=""mb-3"">\n                <label className=""form-label"" htmlFor='group-name'>Name</label>\n                <input id=""group-name"" className=""form-control"" value={name} onChange={(e) => setName(e.target.value)} required />\n              </div>\n              <div className=""mb-3"">\n                <label className=""form-label"" htmlFor='group-description'>Description</label>\n                <input id= ""group-description"" className=""form-control"" value={description} onChange={(e) => setDescription(e.target.value)} required />\n              </div>\n              <div className=""mb-3"">\n                <label className=""form-label"" htmlFor='group-visibility'>Visibility</label>\n                <select id='visibility' className=""form-select"" value={visibility} onChange={(e) => setVisibility(e.target.value)}>\n                  <option value=""PRIVATE"">PRIVATE</option>\n                  <option value=""PUBLIC"">PUBLIC</option>\n                </select>\n              </div>\n            </div>\n            <div className=""modal-footer"">\n              <button className=""btn btn-success"" type=""submit"">Save</button>\n              <button className=""btn btn-secondary"" data-bs-dismiss=""modal"" type=""button"">Cancel</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n",javascriptreact,tab
